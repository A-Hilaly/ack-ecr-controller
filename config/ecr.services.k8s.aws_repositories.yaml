
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
  creationTimestamp: null
  name: repositories.ecr.services.k8s.aws
spec:
  group: ecr.services.k8s.aws
  names:
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Namespaced
  conversion:
    strategy: Webhook
    webhook:
      conversionReviewVersions: ["v1","v2", "v1beta1"]
      clientConfig:
        url: "https://127.0.0.1:9443/"
        caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3lPREUyTURBek1Gb1hEVE13TURneU5qRTJNREF6TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmxkCjJQbnVwTTJHeEk4aStrYXloOHQzUUpRLzJjRHp0anBlaGFpTW1WOUt2elVMdkpJQkczL04xOEhkbURNVnJSaGkKeFIybWN3NWV3azE1VVhlRHl4aDVMSmxGaU9hYlRVa2QyMWpvSTJsVmFPK1poRkU4ekpDMVE2aW9EZ1lwSEN6Ywp5dWpXbGpWUDIvam51bTlpekFvejBXWUYyYVZOOE5vWFpQRmNjRURYN0tVRGFvTjc4akxtbzNmcnY5U1BTRGExCk5Beng1Ylk0Ujl2MmlZcUNxZXNoY1BlNnd0ZFUwZ3pJbVdCY0pIdjRoZTIvU3hFL3BCRitTOXRLVVd5OXU2SEEKaHVDVXJKVVYyeHY1YWsyRWlHSXg4L0Z0QlYxVC9mZitJM0xBeENyTjFiejhjdjA3LytQOTRDVG5EQk1TdnFWWApvNzFuN21DTHpBTUhvL21yelAwQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFTjBHN1NLeVpURUhtNC9TTUJRQk5neEZHSzEKWUpFQXluS0p6bFlOUFJqWk53MDRjM3haSjN6TGxUa3BEL1hBUHZBLzB0MnBRaFc4V1dMQkcvTHdIeTlMK3Fkbwpkay9lbmpiVUU3K25xZHhhemhTamkvMGhiYy9jRjlxLzNEZ3M5NVpseENPOUJVZ0VQemd5Z2lYenkwY3lud0JzCjJRc1ZPanZaZjkySVBBUytoTURJZlJnMFlDUXQySFVHdUZEUW04R0F1enFqUVZNL0g5aWppYWF0QmVIcEp6RUMKcVRwdEp6TVhQajY0dWtZQTRmSXpyM2Q2Z3JCQTRpb3ZHbFlKTXJlQW14bEhYd0FJWGlRa001WEZqSTZGYzdQRQo3bTVSM0NLaWttUXljQktMMUVRdlJpc2tyQUVKT2sxcDB4VTBEdEhocVdOM244SFBoQWRrVkUwMXVUaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Repository is the Schema for the Repositories API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RepositorySpec defines the desired state of Repository
            properties:
              encryptionConfiguration:
                description: The encryption configuration for the repository. This
                  determines how the contents of your repository are encrypted at
                  rest.
                properties:
                  encryptionType:
                    type: string
                  kmsKey:
                    type: string
                type: object
              imageScanningConfiguration:
                description: The image scanning configuration for the repository.
                  This determines whether images are scanned for known vulnerabilities
                  after being pushed to the repository.
                properties:
                  scanOnPush:
                    type: boolean
                type: object
              imageTagMutability:
                description: The tag mutability setting for the repository. If this
                  parameter is omitted, the default setting of MUTABLE will be used
                  which will allow image tags to be overwritten. If IMMUTABLE is specified,
                  all image tags within the repository will be immutable which will
                  prevent them from being overwritten.
                type: string
              name:
                description: The name to use for the repository. The repository name
                  may be specified on its own (such as nginx-web-app) or it can be
                  prepended with a namespace to group the repository into a category
                  (such as project-a/nginx-web-app).
                type: string
              tags:
                description: The metadata that you apply to the repository to help
                  you categorize and organize them. Each tag consists of a key and
                  an optional value, both of which you define. Tag keys can have a
                  maximum character length of 128 characters, and tag values can have
                  a maximum length of 256 characters.
                items:
                  description: The metadata that you apply to a resource to help you
                    categorize and organize them. Each tag consists of a key and an
                    optional value, both of which you define. Tag keys can have a
                    maximum character length of 128 characters, and tag values can
                    have a maximum length of 256 characters.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - name
            type: object
          status:
            description: RepositoryStatus defines the observed state of Repository
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                required:
                - ownerAccountID
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: The date and time, in JavaScript date format, when the
                  repository was created.
                format: date-time
                type: string
              registryID:
                description: The AWS account ID associated with the registry that
                  contains the repository.
                type: string
              repositoryURI:
                description: The URI for the repository. You can use this URI for
                  container image push and pull operations.
                type: string
            required:
            - ackResourceMetadata
            - conditions
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2
    schema:
      openAPIV3Schema:
        description: Repository is the Schema for the Repositories API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RepositorySpec defines the desired state of Repository
            properties:
              encryptionConfiguration:
                description: The encryption configuration for the repository. This
                  determines how the contents of your repository are encrypted at
                  rest.
                properties:
                  encryptionType:
                    type: string
                  kmsKey:
                    type: string
                type: object
              imageTagMutability:
                description: The tag mutability setting for the repository. If this
                  parameter is omitted, the default setting of MUTABLE will be used
                  which will allow image tags to be overwritten. If IMMUTABLE is specified,
                  all image tags within the repository will be immutable which will
                  prevent them from being overwritten.
                type: string
              name:
                description: The name to use for the repository. The repository name
                  may be specified on its own (such as nginx-web-app) or it can be
                  prepended with a namespace to group the repository into a category
                  (such as project-a/nginx-web-app).
                type: string
              scanConfig:
                description: The image scanning configuration for the repository.
                  This determines whether images are scanned for known vulnerabilities
                  after being pushed to the repository.
                properties:
                  scanOnPush:
                    type: boolean
                type: object
              tags:
                description: The metadata that you apply to the repository to help
                  you categorize and organize them. Each tag consists of a key and
                  an optional value, both of which you define. Tag keys can have a
                  maximum character length of 128 characters, and tag values can have
                  a maximum length of 256 characters.
                items:
                  description: The metadata that you apply to a resource to help you
                    categorize and organize them. Each tag consists of a key and an
                    optional value, both of which you define. Tag keys can have a
                    maximum character length of 128 characters, and tag values can
                    have a maximum length of 256 characters.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - name
            type: object
          status:
            description: RepositoryStatus defines the observed state of Repository
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                required:
                - ownerAccountID
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: The date and time, in JavaScript date format, when the
                  repository was created.
                format: date-time
                type: string
              registryID:
                description: The AWS account ID associated with the registry that
                  contains the repository.
                type: string
              repositoryURI:
                description: The URI for the repository. You can use this URI for
                  container image push and pull operations.
                type: string
            required:
            - ackResourceMetadata
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
